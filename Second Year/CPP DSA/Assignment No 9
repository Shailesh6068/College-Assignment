#include<iostream>
using namespace std;
#define n 100
class BrowserHistory
{
    public:
    int top;
    string *arr;
    int capacity;
    int curr;

    BrowserHistory()
    {
        top = -1;
        capacity = n;
        arr = new string[capacity];
        curr = 0;       
    }
    void is_empty()
    {
        if(top == -1)
        {
            cout<<"No history is present"<<endl;
        }
    }
    void newpage()
    {
        if(top > capacity)
        {
            cout<<"History is full. Can't add new page.";
            return;
        }
        string page_name;           //another method to insert page_name
        top = top + 1;
        cout<<"Enter the page name :";
        //cin.ignore();                  another method
        //getline(cin, arr[top]);              
        cin>>page_name;
        arr[top] = page_name;
    }
    void display()
    {
        for(int i = top; i >= 0 ; i--)
        {
            cout<<arr[i]<<endl;
        }
    }
    void delete_page()
    { 
        if(top == -1)
        {
            cout<<"No history Present to delete."<<endl;
        }
        else
        {
            top = top-1;
            cout<<"Recent Page deleted.\n";
        }
    }
    void go_to_back_page()
    {   
        int curr = top;
        curr = curr-1;
        cout<<arr[curr]<<endl;
    }
};

int main()
{
    int a;
    BrowserHistory br;
    cout<<"The Choices are:"<<endl;
    cout<<"1:Add New page."<<endl
        <<"2:check is History is Empty or Not."<<endl
        <<"3:Delete page."<<endl
        <<"4:Go to back page."<<endl
        <<"5:Show History."<<endl
        <<"6.Close all page and go to Desktop."<<endl;
    while(true)
    {
        cout<<"Enter the choice :";
        cin>>a;
        switch(a)
        {
            case 1:
                br.newpage();
                break;

            case 2:
                br.is_empty();
                break;

            case 3:
                br.delete_page();
                break;

            case 4:
                br.go_to_back_page();
                break;

            case 5:
                br.display();
                break;

            case 6:
                exit(0);
        }
        
    }
    return 0;
}
